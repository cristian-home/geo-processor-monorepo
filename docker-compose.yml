version: "3.8"

services:
  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./geo-processor-frontend
      dockerfile: docker/Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - gateway
    restart: unless-stopped
    networks:
      - geo-processor-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway Service (NestJS)
  gateway:
    build:
      context: ./geo-processor-api-gateway
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PYTHON_SERVICE_URL=http://backend:8000
      - FRONTEND_URL=http://frontend:3000
      - CACHE_TTL=300
      - CACHE_MAX_ITEMS=100
      - LOG_LEVEL=info
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - geo-processor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service (Python/FastAPI)
  backend:
    build:
      context: ./geo-processor-api-backend
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - geo-processor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  geo-processor-network:
    driver: bridge

volumes:
  frontend_node_modules:
  gateway_node_modules:
